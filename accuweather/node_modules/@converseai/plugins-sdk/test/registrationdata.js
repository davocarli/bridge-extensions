/*
 * Copyright 2017-present, Converse.AI
 * All rights reserved.
 *
 * This source code is licensed under the license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

const Payloads    = require('../').Payloads;
const RegistrationDataResponse     = Payloads.RegistrationDataResponse;
const expect      = require('chai').expect;

describe('RegistrationData', function() {

    it('addWorkflowTrigger', function() {

        const response = new RegistrationDataResponse();

        response.addWorkflowTrigger(
            'example', 
            {
                'id':'123456789',
                'name':'Test Object',
                'event':'test_event',
            },
            {
                'startstate':'anyvalue',
            }
        );

        expect(response).has.property('workflowTriggers').has.length(1);
        expect(response.workflowTriggers[0]).has.property('intent').to.equal('example');
        expect(response.workflowTriggers[0]).has.property('triggerDetails');
        expect(response.workflowTriggers[0].triggerDetails).has.property('id').to.equal('123456789');
        expect(response.workflowTriggers[0].triggerDetails).has.property('name').to.equal('Test Object');
        expect(response.workflowTriggers[0].triggerDetails).has.property('event').to.equal('test_event');
        expect(response.workflowTriggers[0]).has.property('entityData');
        expect(response.workflowTriggers[0].entityData).has.property('startstate').to.equal('anyvalue');
        
    });

});