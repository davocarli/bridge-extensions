/*
 * Copyright 2017-present, Converse.AI
 * All rights reserved.
 *
 * This source code is licensed under the license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

 module.exports = class RegistrationDataPayload extends require('./Payload') {
  constructor(registrationData) {
    super();
    this.registrationData = registrationData
    this.workflowTriggers = [];
  }

  /**
  * Sets the registrationData for the payload.
  * @param {Object} registrationData The registration data for the plugin registration.
  * @public
  */
  setRegistrationData(registrationData) {
    this.registrationData = registrationData;
  }

  /**
   * Add a workflow trigger definition to the payload.
   * @param {string} workflow The intent or UUID of the target workflow.
   * @param {Object} triggerDetails An object containing the triggering events details.
   * @param {Object} entityData An object defining the state values that are to be pre-set when using this trigger.
   */
  addWorkflowTrigger(workflow, triggerDetails, entityData = undefined){
    if (this.workflowTriggers === undefined){
      this.workflowTriggers = [];
    }
    this.workflowTriggers.push({
      intent: workflow,
      entityData,
      triggerDetails,
    });
  }
}
