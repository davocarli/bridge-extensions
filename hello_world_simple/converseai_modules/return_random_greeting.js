/**
 * @file return_random_greeting.js
 * @description This module will take up to 5 inputs as "greetings" 
 * and prefix one of them to ", World!" before adding it to the 
 * conversation. 
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

'use strict';

const Status          = require('@converseai/plugins-sdk').Status;
const ModuleResponse  = require('@converseai/plugins-sdk').Payloads.Module.ModuleResponse;

module.exports = function return_random_greeting (app, body) {
 /**
  * Registration parameters are assigned to body.payload.registrationData
  * and Module parameters are assigned to body.payload.moduleParam.
  * @example
  * var regOne = body.payload.registrationData.regOne;
  * var modOne = body.payload.moduleParam.modOne;
  */

  /** @type {String[]} inputArray The set of greetings to randomly 
  * choose from.  */
  var inputArray = body.payload.moduleParam.input_array;
  var randomResponse;

  if (inputArray) {
    var randomIndex = Math.floor(Math.random() * inputArray.length);
    randomResponse = inputArray[randomIndex] + ', World!';
  }

  /** @type {ModuleResponse} response The Converse AI response to respond with. */
  var response = new ModuleResponse();

  /*
  * Set an object on the response. This object will be returned to and stored
  * on the current conversation state. It is important to ensure the JSON
  * definition of this module has `hasReturn` set to true. E.g. if this module
  * is fired from a state called `myState` then the object can be accessed with
  * handlebars like:
  * {{states.myState.davocarli_hello_world.return_random_greeting}}
  */
  response.setValue({ result: randomResponse });
  
  /*
  * This will return a success status and response to the conversation.
  * It is important to always call this method when the module has finished
  * computing regardless of whether you wish to send a response or not. If not,
  * the conversation will hang indefinitely.
  */
  app.send(Status.SUCCESS, response);

};
